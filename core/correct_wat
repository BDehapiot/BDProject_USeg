#%% Imports

import time
from pathlib import Path
from skimage.io import imread, imsave

#%% Initialize

# Create paths
root_path = Path(__file__).parents[1]
data_path = Path(root_path / 'data' / 'correct_wat')

for path in data_path.iterdir():
    
    if 'rsize_027.tif' in path.name:
        rsize_path = path
        print(rsize_path.resolve())
    
    if 'wat_027.tif' in path.name:
        wat_path = path
        print(wat_path.resolve())
        
    if 'inputs_027.tif' in path.name:
        inputs_path = path
        print(inputs_path.resolve())
       
    if 'labels_027.tif' in path.name:
        labels_path = path
        print(labels_path.resolve())
        
# open data
rsize = imread(rsize_path) 
wat = imread(wat_path) 
inputs = imread(inputs_path) 
labels = imread(labels_path) 

#%%

from skimage.morphology import label
from skimage.measure import regionprops_table

start = time.time()
print('xxx')

wat_labels = labels.copy()
wat_labels[wat != 0] = 0
input_labels = label(inputs)

props = regionprops_table(
    input_labels, wat_labels, properties=('label', 'intensity_min'))

inputs_add = inputs.copy()
inputs_remove = inputs.copy()
for idx, int_min in zip(props['label'], props['intensity_min']):
    if int_min == 0:
        inputs_add[input_labels == idx] = 0
    else:
        inputs_remove[input_labels == idx] = 0
        
# -----------------------------------------------------------------------------

from tools.conn import labconn

watnew = wat.copy()    
watnew[inputs_remove != 0] = 0
watnew = (labconn(watnew) > 1) * 255

# -----------------------------------------------------------------------------


        
end = time.time()
print(f'  {(end - start):5.5f} s')  
        
#%%

import numpy as np

print(np.max(inputs_remove))

#%%

imsave(Path(data_path /'inputs_add.tif'), inputs_add, check_contrast=False)        
imsave(Path(data_path /'inputs_remove.tif'), inputs_remove, check_contrast=False)   

