#%% Imports -------------------------------------------------------------------

import napari
import numpy as np
from skimage import io
from pathlib import Path
from magicgui import magicgui

#%% Open data -----------------------------------------------------------------

# File name
raw_name = '13-12-06_40x_GBE_eCad_Ctrl_#19_uint8.tif'
# raw_name = '13-03-06_40x_GBE_eCad(Carb)_Ctrl_#98_uint8.tif'
# raw_name = '18-03-12_100x_GBE_UtrCH_Ctrl_b3_uint8.tif'
# raw_name = '17-12-18_100x_DC_UtrCH_Ctrl_b3_uint8.tif'
# raw_name = 'Disc_Fixed_118hAEL_disc04_uint8_crop.tif'
# raw_name = 'Disc_ex_vivo_118hAEL_disc2_uint8.tif'

# Open data
raw = io.imread(Path('../data/', raw_name))

# Add one dimension (if ndim = 2)
ndim = (raw.ndim)        
if ndim == 2:
    raw = raw.reshape((1, raw.shape[0], raw.shape[1]))

#%% Initialize ----------------------------------------------------------------

def display_wat(raw):
    
    class Viewer(napari.Viewer):
        pass
    
    viewer = Viewer()
    
    viewer.add_image(
        raw[raw.shape[0]//2,...], 
        name='raw',
        colormap='gray',
        contrast_limits=(
            np.quantile(raw, 0.001),
            np.quantile(raw, 0.999),
            ),
        )
    
    @magicgui(
        
        auto_call = True,
                       
        frame = {
            'widget_type': 'SpinBox', 
            'label': 'frame',
            'min': 0, 'max': raw.shape[0]-1,
            'value': raw.shape[0]//2,
            },
        
        binning = {
            'widget_type': 'SpinBox', 
            'label': 'binning',
            'min': 1, 'max': 4, 'step': 1,
            'value': 2,
            },
        
        ridge_size = {
            'widget_type': 'FloatSpinBox', 
            'label': 'ridge size (pixels)',
            'min': 0, 'max': 10, 'step': 0.5,
            'value': 3,
            },
        
        thresh_coeff = {
            'widget_type': 'FloatSpinBox', 
            'label': 'thresh. coeff.',
            'min': 0, 'step': 0.1,
            'value': 1.0,
            },

        binning = {
            'widget_type': 'SpinBox', 
            'label': 'binning',
            'min': 1, 'max': 4, 'step': 1,
            'value': 2,
            },        

        
        preview = {
            'widget_type': 'CheckBox',
            'label': 'preview',
            'value': False, 
            },
        
        )
    
    # small_cell_cutoff = 10
    # large_cell_cutoff = 10
    # remove_border_cells = False
    
    def display(
            frame: int,
            rsize_factor:  float,
            ridge_size : float,
            thresh_coeff:  float,
            thresh_min_size: float,            
            preview: bool,
            ):
        
        pass
    
#%% Run -----------------------------------------------------------------------

display_wat(raw)
             